name: build
on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    
    env:
      CCTR: ./cc-test-reporter
      BUNDLE_WITHOUT: production
      TZ: America/Los_Angeles
      airtable_api_key: ${{ secrets.API_KEY }}
      
    steps:
    - uses: actions/checkout@v1
    
    - name: Install Ruby (3.0)
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.0.3
        bundler-cache: true
    
    - name: Setup CodeClimate test-reporter
      run: |
        curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
        chmod +x ./cc-test-reporter
        ./cc-test-reporter before-build
        
    - name: Install bundler and dependencies
      run: |
        gem install bundler
        bundle install
        
    - name: Setup API key
      run: |
        export KEY=${{ secrets.PASSPHRASE }}
        gpg --passphrase "$KEY" --decrypt --batch --yes --passphrase "$KEY" --output config/application.yml config/application.yml.asc
        
    - name: Setup PostgreSQL
      run: |
        sudo apt-get install postgresql libpq-dev
        sudo service postgresql start
        sudo -u postgres createuser --superuser "$USER"
        
    - name: Setup database
      run: |
        bundle exec rake db:create db:migrate
    
    - name: run Cucumber tests and capture coverage
      run: |
        bundle exec cucumber
        ./cc-test-reporter format-coverage --output coverage/codeclimate.$SUITE.json --input-type simplecov 
    
    - name: run RSpec tests and capture coverage
      run: |
        bundle exec rspec
        ./cc-test-reporter format-coverage --output coverage/codeclimate.$SUITE.json --input-type simplecov

    - name: Publish code coverage
      run: |
        export GIT_BRANCH="${GITHUB_REF/refs\/heads\//}"
        ./cc-test-reporter sum-coverage coverage/codeclimate.*.json
        ./cc-test-reporter upload-coverage -r ${{ secrets.CC_TEST_REPORT_ID }}
        ./cc-test-reporter after-build -r ${{ secrets.CC_TEST_REPORT_ID }}
